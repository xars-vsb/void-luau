--$$$$$$$$\ $$$$$$$\   $$$$$$\  $$$$$$$\ $$$$$$$$\ $$$$$$$$\ $$\   $$\ 
--\__$$  __|$$  __$$\ $$  __$$\ $$  __$$\\____$$  |$$  _____|$$ |  $$ |
--   $$ |   $$ |  $$ |$$ /  $$ |$$ |  $$ |   $$  / $$ |      \$$\ $$  |
--   $$ |   $$$$$$$  |$$$$$$$$ |$$$$$$$  |  $$  /  $$$$$\     \$$$$  / 
--   $$ |   $$  __$$< $$  __$$ |$$  ____/  $$  /   $$  __|    $$  $$<  
--   $$ |   $$ |  $$ |$$ |  $$ |$$ |      $$  /    $$ |      $$  /\$$\ 
--   $$ |   $$ |  $$ |$$ |  $$ |$$ |     $$$$$$$$\ $$ |      $$ /  $$ |
--   \__|   \__|  \__|\__|  \__|\__|     \________|\__|      \__|  \__|

--//====================================\\--
--|| TRAPZFX'S GLITCHER WING ANIMATOR!! ||--
--\\====================================//--

local dumbWingAnimator = {}

local currentAnim = {
	["mv1"] = nil,
	["mv2"] = nil,
	["mv3"] = nil,
	["tw1"] = nil,
	["lw1"] = nil,
	["lw2"] = nil,
	["lw3"] = nil,
	["lw4"] = nil,
	["lw5"] = nil,
	["lw6"] = nil
}

local ts = game:GetService("TweenService")

local sine = 0
local usine = 0

local currentsineMove = "minus"

local globalid = 0

local origl1C0
local origl2C0
local origl3C0
local origr1C0
local origr2C0
local origr3C0
local origTWC0
local origM1C0--$$$$$$$$\ $$$$$$$\   $$$$$$\  $$$$$$$\ $$$$$$$$\ $$$$$$$$\ $$\   $$\ 
--\__$$  __|$$  __$$\ $$  __$$\ $$  __$$\\____$$  |$$  _____|$$ |  $$ |
--   $$ |   $$ |  $$ |$$ /  $$ |$$ |  $$ |   $$  / $$ |      \$$\ $$  |
--   $$ |   $$$$$$$  |$$$$$$$$ |$$$$$$$  |  $$  /  $$$$$\     \$$$$  / 
--   $$ |   $$  __$$< $$  __$$ |$$  ____/  $$  /   $$  __|    $$  $$<  
--   $$ |   $$ |  $$ |$$ |  $$ |$$ |      $$  /    $$ |      $$  /\$$\ 
--   $$ |   $$ |  $$ |$$ |  $$ |$$ |     $$$$$$$$\ $$ |      $$ /  $$ |
--   \__|   \__|  \__|\__|  \__|\__|     \________|\__|      \__|  \__|

--//====================================\\--
--|| TRAPZFX'S GLITCHER WING ANIMATOR!! ||--
--\\====================================//--

local dumbWingAnimator = {}

local currentAnim = {
	["mv1"] = nil,
	["mv2"] = nil,
	["mv3"] = nil,
	["tw1"] = nil,
	["lw1"] = nil,
	["lw2"] = nil,
	["lw3"] = nil,
	["lw4"] = nil,
	["lw5"] = nil,
	["lw6"] = nil
}

local ts = game:GetService("TweenService")

local sine = 0
local usine = 0

local currentsineMove = "minus"

local globalid = 0

local origl1C0
local origl2C0
local origl3C0
local origr1C0
local origr2C0
local origr3C0
local origTWC0
local origM1C0
local origM2C0
local origM3C0

local activated = ""

local leftSideNames = {"Part1","Part2","Part3"}
local rightSideNames = {"Part4","Part5","Part6"}

local angles,cf,rad,cos,sin = CFrame.Angles,CFrame.new,math.rad,math.cos,math.sin

local function cts(inst,tinf,goal)
	return ts:Create(inst,tinf,goal)
end

function dumbWingAnimator:setupWingAnim(lwing1,lwing2,lwing3,rwing1,rwing2,rwing3,TWELD,mov1,mov2,mov3)
	origl1C0 = lwing1.C0
	origl2C0 = lwing2.C0
	origl3C0 = lwing3.C0
	origr1C0 = rwing1.C0
	origr2C0 = rwing2.C0
	origr3C0 = rwing3.C0
	origTWC0 = TWELD.C0
	origM1C0 = mov1.C0
	origM2C0 = mov2.C0
	origM3C0 = mov3.C0
	game:GetService("RunService").Heartbeat:Connect(function()
		sine = sine + 1
		--usine = sine * 100

		if globalid == 1 then
			rwing1.C0 = rwing1.C0:lerp(cf(0,-cos(sine / 24),0) * angles(0,0,sin(sine / 24)) * angles(0,0,-rad(50)), 0.2)
			rwing2.C0 = rwing2.C0:lerp(cf(0,-cos(sine / 24),0) * angles(0,0,sin(sine / 24)) * angles(0,0,-rad(50)), 0.2)
			rwing3.C0 = rwing3.C0:lerp(cf(0,-cos(sine / 24),0) * angles(0,0,sin(sine / 24)) * angles(0,0,-rad(50)), 0.2)
			lwing1.C0 = lwing1.C0:lerp(cf(0,cos(sine / 24),0) * angles(0,0,-sin(sine / 24)) * angles(0,0,rad(50)), 0.2)
			lwing2.C0 = lwing2.C0:lerp(cf(0,cos(sine / 24),0) * angles(0,0,-sin(sine / 24)) * angles(0,0,rad(50)), 0.2)
			lwing3.C0 = lwing3.C0:lerp(cf(0,cos(sine / 24),0) * angles(0,0,-sin(sine / 24)) * angles(0,0,rad(50)), 0.2)
		end

		if globalid == 2 then
			rwing1.C0 = rwing1.C0:lerp(cf(0,-cos(sine / 48),0) * angles(0,0,sin(sine / 24)) * angles(0,0,-rad(80)), 0.2)
			rwing2.C0 = rwing2.C0:lerp(cf(0,-cos(sine / 48),0) * angles(0,0,sin(sine / 24)) * angles(0,0,-rad(80)), 0.2)
			rwing3.C0 = rwing3.C0:lerp(cf(0,-cos(sine / 48),0) * angles(0,0,sin(sine / 24)) * angles(0,0,-rad(80)), 0.2)
			lwing1.C0 = lwing1.C0:lerp(cf(0,cos(sine / 48),0) * angles(0,0,-sin(sine / 24)) * angles(0,0,rad(80)), 0.2)
			lwing2.C0 = lwing2.C0:lerp(cf(0,cos(sine / 48),0) * angles(0,0,-sin(sine / 24)) * angles(0,0,rad(80)), 0.2)
			lwing3.C0 = lwing3.C0:lerp(cf(0,cos(sine / 48),0) * angles(0,0,-sin(sine / 24)) * angles(0,0,rad(80)), 0.2)
		end

		if globalid == 3 then
			rwing1.C0 = rwing1.C0:lerp(cf(cos(sine / 120),0,0) * angles(0,0,rad(-5))--[[ * angles(0,0,-sin(sine / 25))]], 0.2)
			rwing2.C0 = rwing2.C0:lerp(cf(cos(sine / 110),0,0) * angles(0,0,rad(-10))--[[* angles(0,0,-sin(sine / 25))]], 0.25)
			rwing3.C0 = rwing3.C0:lerp(cf(cos(sine / 100),0,0) * angles(0,0,rad(-15))--[[* angles(0,0,-sin(sine / 25))]], 0.3)
			lwing1.C0 = lwing1.C0:lerp(cf(cos(sine / 120),0,0) * angles(0,0,-rad(-5))--[[ * angles(0,0,sin(sine / 25))]], 0.2)
			lwing2.C0 = lwing2.C0:lerp(cf(cos(sine / 110),0,0) * angles(0,0,-rad(-10))--[[ * angles(0,0,sin(sine / 25))]], 0.25)
			lwing3.C0 = lwing3.C0:lerp(cf(cos(sine / 100),0,0) * angles(0,0,-rad(-15))--[[ * angles(0,0,sin(sine / 25))]], 0.3)
			TWELD.C0 = origTWC0 * cf(0,6,0)
		end

		if globalid == 4 then
			rwing1.C0 = rwing1.C0:lerp(angles(0,0,-sin(usine/600)) * cf(sin(usine/60),0,0), 0.2)
			rwing2.C0 = rwing2.C0:lerp(angles(0,0,-sin(usine/600)) * cf(sin(usine/60),0,0), 0.25)
			rwing3.C0 = rwing3.C0:lerp(angles(0,0,-sin(usine/600)) * cf(sin(usine/60),0,0), 0.3)
			lwing1.C0 = lwing1.C0:lerp(angles(0,0,-sin(usine/600)) * cf(sin(usine/60),0,0), 0.2)
			lwing2.C0 = lwing2.C0:lerp(angles(0,0,-sin(usine/600)) * cf(sin(usine/60),0,0), 0.25)
			lwing3.C0 = lwing3.C0:lerp(angles(0,0,-sin(usine/600)) * cf(sin(usine/60),0,0), 0.3)
		end
	end)
end

function dumbWingAnimator:setWingAnim(wings,wingAnimID,lwing1,lwing2,lwing3,rwing1,rwing2,rwing3,TWELD,mov1,mov2,mov3,rightsidetransparency,leftsidetransparency)
	--othr!!!
	globalid = wingAnimID
	if wingAnimID == 1 then
		rwing2.C0 = origr2C0 
		lwing2.C0 = origl2C0 
		lwing3.C0 = origl3C0 
		rwing3.C0 = origr3C0 
		lwing1.C0 = origl1C0 
		rwing1.C0 = origr1C0 
		TWELD.C0 = origTWC0 * cf(0,1.5,0) * angles(0,0,rad(180))
		mov1.C0 = origM1C0 * angles(0,0,rad(60))-- + Vector3.new(0,1,0)
		mov2.C0 = origM2C0 * angles(0,0,rad(60))-- + Vector3.new(0,1,0)
		mov3.C0 = origM3C0 * angles(0,0,rad(60))-- + Vector3.new(0,1,0) 
	end
	if wingAnimID == 2 then
		rwing2.C0 = origr2C0 
		lwing2.C0 = origl2C0 
		lwing3.C0 = origl3C0 
		rwing3.C0 = origr3C0 
		lwing1.C0 = origl1C0 
		rwing1.C0 = origr1C0 
		TWELD.C0 = origTWC0 * cf(0,1,0)
		mov1.C0 = origM1C0 * angles(0,0,rad(60))
		mov2.C0 = origM2C0 * angles(0,0,rad(60))
		mov3.C0 = origM3C0 * angles(0,0,rad(60))
	end
	if wingAnimID == 3 then
		rwing2.C0 = origr2C0 
		lwing2.C0 = origl2C0 
		lwing3.C0 = origl3C0 
		rwing3.C0 = origr3C0 
		lwing1.C0 = origl1C0 
		rwing1.C0 = origr1C0 
		TWELD.C0 = origTWC0 * cf(0,3,0)
		mov1.C0 = origM1C0 * angles(0,0,rad(60))
		mov2.C0 = origM2C0 * angles(0,0,rad(60))
		mov3.C0 = origM3C0 * angles(0,0,rad(60))
	end
	if wingAnimID == 4 then
		rwing2.C0 = origr2C0 
		lwing2.C0 = origl2C0 
		lwing3.C0 = origl3C0 
		rwing3.C0 = origr3C0 
		lwing1.C0 = origl1C0 
		rwing1.C0 = origr1C0 
		TWELD.C0 = origTWC0
		mov1.C0 = origM1C0 * angles(0,0,rad(60))
		mov2.C0 = origM2C0 * angles(0,0,rad(60))
		mov3.C0 = origM3C0 * angles(0,0,rad(60))
	end
	if wingAnimID == 4 then
		activated = "4"

		TWELD.C0 = origTWC0 
		rwing2.C0 = origr2C0 * cf(-2,0,0)
		lwing2.C0 = origl2C0 * cf(2,0,0)
		lwing3.C0 = origl3C0 * cf(2,0,0)
		rwing3.C0 = origr3C0 * cf(-2,0,0)
		lwing1.C0 = origl1C0 * cf(2,0,0)
		rwing1.C0 = origr1C0 * cf(-2,0,0)

		mov1.C0 = origM1C0 * angles(0,0,-10) 
		mov3.C0 = origM3C0 * angles(0,0,10) 

		spawn(function()
			repeat	
				local specsine = sine
				lwing1.C0 = lwing1.C0 * angles(0,0,(usine/120000)) * cf(usine/60000,0,0)
				lwing2.C0 = lwing2.C0 * angles(0,0,(usine/120000)) * cf(usine/60000,0,0)
				lwing3.C0 = lwing3.C0 * angles(0,0,(usine/120000)) * cf(usine/60000,0,0)
				rwing1.C0 = rwing1.C0 * angles(0,0,(usine/120000)) * cf(-usine/60000,0,0)
				rwing2.C0 = rwing2.C0 * angles(0,0,(usine/120000)) * cf(-usine/60000,0,0)
				rwing3.C0 = rwing3.C0 * angles(0,0,(usine/120000)) * cf(-usine/60000,0,0)
				if currentsineMove == "add" then
					usine = usine + 1
				elseif currentsineMove == "minus" then
					usine = usine - 1
				end
				if usine == -500 then
					currentsineMove = "add"
				elseif usine == 500 then
					currentsineMove = "minus"
				end
				TWELD.C0 = TWELD.C0 * angles(0,0,rad(usine/32))
				if activated ~= "4" then
					break
				end
				wait(0.001)
			until activated ~= "4"
		end)

	end
end

return dumbWingAnimator
local origM2C0
local origM3C0

local activated = ""

local leftSideNames = {"Part1","Part2","Part3"}
local rightSideNames = {"Part4","Part5","Part6"}

local angles,cf,rad,cos,sin = CFrame.Angles,CFrame.new,math.rad,math.cos,math.sin

local function cts(inst,tinf,goal)
	return ts:Create(inst,tinf,goal)
end

function dumbWingAnimator:setupWingAnim(lwing1,lwing2,lwing3,rwing1,rwing2,rwing3,TWELD,mov1,mov2,mov3)
	origl1C0 = lwing1.C0
	origl2C0 = lwing2.C0
	origl3C0 = lwing3.C0
	origr1C0 = rwing1.C0
	origr2C0 = rwing2.C0
	origr3C0 = rwing3.C0
	origTWC0 = TWELD.C0
	origM1C0 = mov1.C0
	origM2C0 = mov2.C0
	origM3C0 = mov3.C0
	game:GetService("RunService").Heartbeat:Connect(function()
		sine = sine + 1
		--usine = sine * 100

		if globalid == 1 then
			rwing1.C0 = rwing1.C0:lerp(cf(0,-cos(sine / 24),0) * angles(0,0,sin(sine / 24)) * angles(0,0,-rad(50)), 0.2)
			rwing2.C0 = rwing2.C0:lerp(cf(0,-cos(sine / 24),0) * angles(0,0,sin(sine / 24)) * angles(0,0,-rad(50)), 0.2)
			rwing3.C0 = rwing3.C0:lerp(cf(0,-cos(sine / 24),0) * angles(0,0,sin(sine / 24)) * angles(0,0,-rad(50)), 0.2)
			lwing1.C0 = lwing1.C0:lerp(cf(0,cos(sine / 24),0) * angles(0,0,-sin(sine / 24)) * angles(0,0,rad(50)), 0.2)
			lwing2.C0 = lwing2.C0:lerp(cf(0,cos(sine / 24),0) * angles(0,0,-sin(sine / 24)) * angles(0,0,rad(50)), 0.2)
			lwing3.C0 = lwing3.C0:lerp(cf(0,cos(sine / 24),0) * angles(0,0,-sin(sine / 24)) * angles(0,0,rad(50)), 0.2)
		end

		if globalid == 2 then
			rwing1.C0 = rwing1.C0:lerp(cf(0,-cos(sine / 48),0) * angles(0,0,sin(sine / 24)) * angles(0,0,-rad(80)), 0.2)
			rwing2.C0 = rwing2.C0:lerp(cf(0,-cos(sine / 48),0) * angles(0,0,sin(sine / 24)) * angles(0,0,-rad(80)), 0.2)
			rwing3.C0 = rwing3.C0:lerp(cf(0,-cos(sine / 48),0) * angles(0,0,sin(sine / 24)) * angles(0,0,-rad(80)), 0.2)
			lwing1.C0 = lwing1.C0:lerp(cf(0,cos(sine / 48),0) * angles(0,0,-sin(sine / 24)) * angles(0,0,rad(80)), 0.2)
			lwing2.C0 = lwing2.C0:lerp(cf(0,cos(sine / 48),0) * angles(0,0,-sin(sine / 24)) * angles(0,0,rad(80)), 0.2)
			lwing3.C0 = lwing3.C0:lerp(cf(0,cos(sine / 48),0) * angles(0,0,-sin(sine / 24)) * angles(0,0,rad(80)), 0.2)
		end

		if globalid == 3 then
			rwing1.C0 = rwing1.C0:lerp(cf(cos(sine / 120),0,0) * angles(0,0,rad(-5))--[[ * angles(0,0,-sin(sine / 25))]], 0.2)
			rwing2.C0 = rwing2.C0:lerp(cf(cos(sine / 110),0,0) * angles(0,0,rad(-10))--[[* angles(0,0,-sin(sine / 25))]], 0.25)
			rwing3.C0 = rwing3.C0:lerp(cf(cos(sine / 100),0,0) * angles(0,0,rad(-15))--[[* angles(0,0,-sin(sine / 25))]], 0.3)
			lwing1.C0 = lwing1.C0:lerp(cf(cos(sine / 120),0,0) * angles(0,0,-rad(-5))--[[ * angles(0,0,sin(sine / 25))]], 0.2)
			lwing2.C0 = lwing2.C0:lerp(cf(cos(sine / 110),0,0) * angles(0,0,-rad(-10))--[[ * angles(0,0,sin(sine / 25))]], 0.25)
			lwing3.C0 = lwing3.C0:lerp(cf(cos(sine / 100),0,0) * angles(0,0,-rad(-15))--[[ * angles(0,0,sin(sine / 25))]], 0.3)
			TWELD.C0 = origTWC0 * cf(0,6,0)
		end
		
		if globalid == 4 then
			rwing1.C0 = rwing1.C0:lerp(angles(0,0,-sin(usine/60)) * cf(sin(usine/60),0,0), 0.2)
			rwing2.C0 = rwing2.C0:lerp(angles(0,0,-sin(usine/60)) * cf(sin(usine/60),0,0), 0.25)
			rwing3.C0 = rwing3.C0:lerp(angles(0,0,-sin(usine/60)) * cf(sin(usine/60),0,0), 0.3)
			lwing1.C0 = lwing1.C0:lerp(angles(0,0,-sin(usine/60)) * cf(sin(usine/60),0,0), 0.2)
			lwing2.C0 = lwing2.C0:lerp(angles(0,0,-sin(usine/60)) * cf(sin(usine/60),0,0), 0.25)
			lwing3.C0 = lwing3.C0:lerp(angles(0,0,-sin(usine/60)) * cf(sin(usine/60),0,0), 0.3)
		end
	end)
end

function dumbWingAnimator:setWingAnim(wings,wingAnimID,lwing1,lwing2,lwing3,rwing1,rwing2,rwing3,TWELD,mov1,mov2,mov3,rightsidetransparency,leftsidetransparency)
	--othr!!!
	globalid = wingAnimID
	if wingAnimID == 1 then
		rwing2.C0 = origr2C0 
		lwing2.C0 = origl2C0 
		lwing3.C0 = origl3C0 
		rwing3.C0 = origr3C0 
		lwing1.C0 = origl1C0 
		rwing1.C0 = origr1C0 
		TWELD.C0 = origTWC0 * cf(0,1.5,0) * angles(0,0,rad(180))
		mov1.C0 = origM1C0 * angles(0,0,rad(60))-- + Vector3.new(0,1,0)
		mov2.C0 = origM2C0 * angles(0,0,rad(60))-- + Vector3.new(0,1,0)
		mov3.C0 = origM3C0 * angles(0,0,rad(60))-- + Vector3.new(0,1,0) 
	end
	if wingAnimID == 2 then
		rwing2.C0 = origr2C0 
		lwing2.C0 = origl2C0 
		lwing3.C0 = origl3C0 
		rwing3.C0 = origr3C0 
		lwing1.C0 = origl1C0 
		rwing1.C0 = origr1C0 
		TWELD.C0 = origTWC0 * cf(0,1,0)
		mov1.C0 = origM1C0 * angles(0,0,rad(60))
		mov2.C0 = origM2C0 * angles(0,0,rad(60))
		mov3.C0 = origM3C0 * angles(0,0,rad(60))
	end
	if wingAnimID == 3 then
		rwing2.C0 = origr2C0 
		lwing2.C0 = origl2C0 
		lwing3.C0 = origl3C0 
		rwing3.C0 = origr3C0 
		lwing1.C0 = origl1C0 
		rwing1.C0 = origr1C0 
		TWELD.C0 = origTWC0 * cf(0,3,0)
		mov1.C0 = origM1C0 * angles(0,0,rad(60))
		mov2.C0 = origM2C0 * angles(0,0,rad(60))
		mov3.C0 = origM3C0 * angles(0,0,rad(60))
	end
	if wingAnimID == 4 then
		rwing2.C0 = origr2C0 
		lwing2.C0 = origl2C0 
		lwing3.C0 = origl3C0 
		rwing3.C0 = origr3C0 
		lwing1.C0 = origl1C0 
		rwing1.C0 = origr1C0 
		TWELD.C0 = origTWC0
		mov1.C0 = origM1C0 * angles(0,0,rad(60))
		mov2.C0 = origM2C0 * angles(0,0,rad(60))
		mov3.C0 = origM3C0 * angles(0,0,rad(60))
	end
	if wingAnimID == 4 then
		TWELD.C0 = origTWC0 
		rwing2.C0 = origr2C0 * cf(-2,0,0)
		lwing2.C0 = origl2C0 * cf(2,0,0)
		lwing3.C0 = origl3C0 * cf(2,0,0)
		rwing3.C0 = origr3C0 * cf(-2,0,0)
		lwing1.C0 = origl1C0 * cf(2,0,0)
		rwing1.C0 = origr1C0 * cf(-2,0,0)
		mov1.C0 = origM1C0 * angles(0,0,-10) 
		mov3.C0 = origM3C0 * angles(0,0,10) 
		--local MV1T = cts(mov1,TweenInfo.new(0.001,Enum.EasingStyle.Sine,Enum.EasingDirection.InOut),{C0 = origM1C0})
		--local MV2T = cts(mov2,TweenInfo.new(0.001,Enum.EasingStyle.Sine,Enum.EasingDirection.InOut),{C0 = origM2C0})
		--local MV3T = cts(mov3,TweenInfo.new(0.001,Enum.EasingStyle.Sine,Enum.EasingDirection.InOut),{C0 = origM3C0})
		--local TW1T = cts(TWELD,TweenInfo.new(0.001,Enum.EasingStyle.Sine,Enum.EasingDirection.InOut),{C0 = origTWC0})
		--local LW1T = cts(lwing1,TweenInfo.new(0.001,Enum.EasingStyle.Sine,Enum.EasingDirection.InOut),{C0 = origl1C0})
		--local LW2T = cts(lwing2,TweenInfo.new(0.001,Enum.EasingStyle.Sine,Enum.EasingDirection.InOut),{C0 = origl2C0})
		--local LW3T = cts(lwing3,TweenInfo.new(0.001,Enum.EasingStyle.Sine,Enum.EasingDirection.InOut),{C0 = origl3C0})
		--local RW1T = cts(rwing1,TweenInfo.new(0.001,Enum.EasingStyle.Sine,Enum.EasingDirection.InOut),{C0 = origr1C0})
		--local RW2T = cts(rwing2,TweenInfo.new(0.001,Enum.EasingStyle.Sine,Enum.EasingDirection.InOut),{C0 = origr2C0})
		--local RW3T = cts(rwing3,TweenInfo.new(0.001,Enum.EasingStyle.Sine,Enum.EasingDirection.InOut),{C0 = origr3C0})


		--if currentAnim.mv1 ~= nil and currentAnim.mv2 ~= nil and currentAnim.mv3 ~= nil and currentAnim.tw1 ~= nil and currentAnim.lw1 ~= nil and currentAnim.lw2 ~= nil and currentAnim.lw3 ~= nil and currentAnim.lw4 ~= nil and currentAnim.lw5 ~= nil and currentAnim.lw6 ~= nil then
		--	currentAnim.mv1:Pause()
		--	currentAnim.mv2:Pause()
		--	currentAnim.mv3:Pause()
		--	currentAnim.tw1:Pause()
		--	currentAnim.lw1:Pause()
		--	currentAnim.lw2:Pause()
		--	currentAnim.lw3:Pause()
		--	currentAnim.lw4:Pause()
		--	currentAnim.lw5:Pause()
		--	currentAnim.lw6:Pause()
		--end

		--currentAnim.mv1 = MV1T
		--currentAnim.mv2 = MV2T
		--currentAnim.mv3 = MV3T
		--currentAnim.tw1 = TW1T
		--currentAnim.lw1 = LW1T
		--currentAnim.lw2 = LW2T
		--currentAnim.lw3 = LW3T
		--currentAnim.lw4 = RW1T
		--currentAnim.lw5 = RW2T
		--currentAnim.lw6 = RW3T

		spawn(function()
			repeat	
				if currentsineMove == "add" then
					usine =  usine + 1
				elseif currentsineMove == "minus" then
					usine =  usine - 1
				end
				if usine == -1000 then
					currentsineMove = "add"
				elseif usine == 1000 then
					currentsineMove = "minus"
				end
				TWELD.C0 = TWELD.C0 * angles(0,0,rad(usine/32))
				if globalid ~= 4 then
					break
				end
				wait(0.001)
			until globalid ~= 4
		end)

		----currentAnim.lw1:Play()
		----currentAnim.lw2:Play()
		----currentAnim.lw3:Play()
		----currentAnim.lw4:Play()
		----currentAnim.lw5:Play()
		----currentAnim.lw6:Play()
	end
	--if wingAnimID == "pauseno4" then
	--	if currentAnim.mv1 ~= nil and currentAnim.mv2 ~= nil and currentAnim.mv3 ~= nil and currentAnim.tw1 ~= nil and currentAnim.lw1 ~= nil and currentAnim.lw2 ~= nil and currentAnim.lw3 ~= nil and currentAnim.lw4 ~= nil and currentAnim.lw5 ~= nil and currentAnim.lw6 ~= nil then
	--		usine = 500
	--		currentsineMove = "minus"
	--		activated = ""
	--		currentAnim.mv1:Pause()
	--		currentAnim.mv2:Pause()
	--		currentAnim.mv3:Pause()
	--		currentAnim.tw1:Pause()
	--		currentAnim.lw1:Pause()
	--		currentAnim.lw2:Pause()
	--		currentAnim.lw3:Pause()
	--		currentAnim.lw4:Pause()
	--		currentAnim.lw5:Pause()
	--		currentAnim.lw6:Pause()
	--	end
	--end
end

return dumbWingAnimator
